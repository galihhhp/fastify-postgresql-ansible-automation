- name: Setup application
  hosts: development
  vars:
    backend_image: galihhhp/simple-fastify
    nginx_image: nginx
    container_name: fastify
    nginx_container_name: nginx
  become: true
  tasks:
    - name: Install packages
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
        update_cache: true
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - nodejs
        - npm

    - name: Add Docker GPG apt Key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      ansible.builtin.apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update package index
      ansible.builtin.apt:
        update_cache: true

    - name: Install Docker packages
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
        update_cache: true
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-buildx-plugin
        - docker-compose-plugin

    - name: Pull an image
      community.docker.docker_image:
        name: "{{ item }}"
        source: pull
        pull:
          platform: amd64
      loop:
        - "{{ backend_image }}"
        - "{{ nginx_image }}"

    - name: Check if App Container exists
      community.docker.docker_container:
        name: "{{ container_name }}"
        image: "{{ backend_image }}"
        state: present
      register: container_check

    - name: Check if Nginx Container exists
      community.docker.docker_container:
        name: "{{ nginx_container_name }}"
        image: "{{ nginx }}"
        state: present
      register: nginx_container_check

    - name: Create Container
      community.docker.docker_container:
        name: "{{ container_name }}"
        state: present
        image: "{{ backend_image }}"
        command: sleep infinity
      when: not container_check.changed

    - name: Create Nginx Container
      community.docker.docker_container:
        name: "{{ nginx_container_name }}"
        state: present
        image: "{{ nginx_image }}"
        published_ports:
          - 80:80
        command: sleep infinity
      when: not nginx_container_check.changed

    - name: Start multiple containers
      community.docker.docker_container:
        name: "{{ item.name }}"
        image: "{{ item.image }}"
        state: started
      loop:
        - { name: "{{ container_name }}", image: "{{ backend_image }}" }
        - { name: "{{ nginx_container_name }}", image: "{{ nginx_image }}" }
      register: container_start_result

    - name: Check if backend container started successfully
      debug:
        msg: "Backend started successfully"
      when: container_start_result.results[0].failed == false

    - name: Handle failure for backend container
      debug:
        msg: "Failed to start backend container"
      when: container_start_result.results[0].failed == true

    - name: Check if nginx container started successfully
      debug:
        msg: "Nginx Container started successfully"
      when: container_start_result.results[1].failed == false

    - name: Handle failure for nginx container
      debug:
        msg: "Failed to start nginx container"
      when: container_start_result.results[1].failed == true
