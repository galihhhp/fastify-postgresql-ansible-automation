name: Ansible CI/CD Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  ansible-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Ansible & Lint
        run: |
          python -m pip install --upgrade pip
          pip install ansible ansible-lint

      - name: Lint Ansible Playbooks
        run: ansible-lint .
        continue-on-error: true

      - name: Create Ansible inventory file
        run: |
          mkdir -p inventory
          echo "${{ secrets.ANSIBLE_INVENTORY }}" > inventory/hosts.ini
          chmod 600 inventory/hosts.ini

      - name: Create Vault Password File
        run: |
          echo "${{ secrets.ANSIBLE_VAULT_PASSWORD }}" > ~/vault_pass.txt
          chmod 600 ~/vault_pass.txt

      - name: Syntax Check (Dry Run)
        run: |
          ansible-playbook playbooks/elk.yaml --syntax-check --vault-password-file ~/vault_pass.txt
          ansible-playbook playbooks/app_setup.yaml --syntax-check --vault-password-file ~/vault_pass.txt
          ansible-playbook playbooks/app.yaml --syntax-check --vault-password-file ~/vault_pass.txt
          ansible-playbook playbooks/database.yaml --syntax-check --vault-password-file ~/vault_pass.txt

      - name: Setup Control Node
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USER }}
          key: ${{ secrets.DEV_SSH_KEY }}
          script_stop: true
          script: |
            set -e
            sudo apt update
            sudo apt install -y python3 python3-pip
            sudo pip3 install ansible

            if [ ! -d ~/ansible ]; then
              git clone https://github.com/galihhhp/fastify-postgresql-ansible-automation.git ~/ansible
            else
              cd ~/ansible && git pull origin main
            fi

            echo "${{ secrets.ANSIBLE_VAULT_PASSWORD }}" > ~/vault_pass.txt
            chmod 600 ~/vault_pass.txt

      - name: Run Playbooks
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USER }}
          key: ${{ secrets.DEV_SSH_KEY }}
          script_stop: true
          script: |
            set -e
            cd ~/ansible

            echo "Running ELK playbook..."
            ansible-playbook playbooks/elk.yaml -i inventory/hosts.ini --vault-password-file ~/vault_pass.txt

            echo "Running app setup playbook..."
            ansible-playbook playbooks/app_setup.yaml -i inventory/hosts.ini --vault-password-file ~/vault_pass.txt

            echo "Running app deployment playbook..."
            ansible-playbook playbooks/app.yaml -i inventory/hosts.ini --vault-password-file ~/vault_pass.txt

            echo "Running database playbook..."
            ansible-playbook playbooks/database.yaml -i inventory/hosts.ini --vault-password-file ~/vault_pass.txt

      - name: Cleanup Sensitive Files
        if: always()
        run: |
          rm -f ~/vault_pass.txt
          rm -f inventory/hosts.ini
